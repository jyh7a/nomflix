{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchConatiner.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","aria-labelledby","Text","props","color","Message","text","porpTypes","PropTypes","string","isRequired","Image","bgRul","Rating","ImageContainer","Year","Poster","id","imageUrl","ratring","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","upcoming","popular","loading","error","map","movie","key","original_title","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchConatiner","event","preventDefault","searchByTerm","target","console","log","a","async","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,2C,4nBCI3C,IAAMC,EAAYC,UAAOC,IAAV,KAMTC,EAAQF,UAAOG,KAAV,KAKLC,EAAOJ,UAAOC,IAAV,KAsBKI,EAfC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACb,kBAACR,EAAD,KACG,kBAACG,EAAD,KAAQI,GACR,kBAACF,EAAD,KAAOG,K,6TCtBb,IAAMR,EAAYC,UAAOC,IAAV,KAQTO,EAASR,UAAOG,KAAV,KAMG,oBACb,kBAAC,EAAD,KACE,kBAACK,EAAD,KACE,0BAAMC,KAAK,MAAMC,aAAW,UAAUC,kBAAgB,WAAtD,a,iQChBN,IAAMZ,EAAYC,UAAOC,IAAV,KAMTW,EAAOZ,UAAOG,KAAV,KACC,SAAAU,GAAK,OAAIA,EAAMC,SAIpBC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMF,EAAT,EAASA,MAAT,OACd,kBAAC,EAAD,KACE,kBAACF,EAAD,CAAME,MAAOA,GAAQE,KAIzBD,EAAQE,UAAY,CAClBD,KAAME,IAAUC,OAAOC,WACvBN,MAAMI,IAAUC,OAAOC,YAGVL,Q,8+BCrBf,IAAMhB,EAAYC,UAAOC,IAAV,KAIToB,EAAQrB,UAAOC,IAAV,KACe,SAAAY,GAAK,OAAIA,EAAMS,SAOnCC,EAASvB,UAAOG,KAAV,KAQNqB,EAAiBxB,UAAOC,IAAV,IAIdoB,EAGAE,GAMArB,EAAQF,UAAOG,KAAV,KAQLsB,EAAOzB,UAAOG,KAAV,KAwCKuB,EAnCA,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,SAAUtB,EAAjB,EAAiBA,MAAOuB,EAAxB,EAAwBA,QAASC,EAAjC,EAAiCA,KAAjC,IAAuCC,eAAvC,gBACb,kBAAC,IAAD,CAAMC,GAAID,EAAO,iBAAaJ,GAAb,gBAA6BA,IAC5C,kBAAC,EAAD,KACE,kBAACH,EAAD,KACE,kBAACH,EAAD,CACEC,MACEM,EAAQ,yCAC8BA,GAClCK,EAAQ,MAGhB,kBAACV,EAAD,KACE,0BAAMd,KAAK,MAAMC,aAAW,UAA5B,UAEQ,IACPmB,EAJH,QAOF,kBAAC,EAAD,KACGvB,EAAM4B,OAAS,GAAf,UAAuB5B,EAAM6B,UAAU,EAAG,IAA1C,OAAqD7B,GAExD,kBAACmB,EAAD,KAAOK,M,0FC/Db,IAAM/B,GAAYC,UAAOC,IAAV,KA2EAmC,GAvEO,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,QAASC,EAAlC,EAAkCA,QAASC,EAA3C,EAA2CA,MAA3C,OACnB,oCACG,kBAAC,IAAD,KACG,oDAGDD,EACE,kBAAC,EAAD,MAEA,kBAAC,GAAD,KACIH,GAAcA,EAAWH,OAAS,GAChC,kBAAC,EAAD,CAAS5B,MAAM,eACX+B,EAAWK,KAAI,SAAAC,GAAK,OAClB,kBAAC,EAAD,CACGC,IAAKD,EAAMhB,GACXA,GAAIgB,EAAMhB,GACVrB,MAAOqC,EAAME,eACbjB,SAAUe,EAAMG,YAChBjB,QAASc,EAAMI,aACfjB,KAAMa,EAAMK,aAAab,UAAU,EAAG,GACtCJ,SAAS,QAKpBO,GAAYA,EAASJ,OAAS,GAC5B,kBAAC,EAAD,CAAS5B,MAAM,oBACXgC,EAASI,KAAI,SAAAC,GAAK,OAChB,kBAAC,EAAD,CACGC,IAAKD,EAAMhB,GACXA,GAAIgB,EAAMhB,GACVrB,MAAOqC,EAAME,eACbjB,SAAUe,EAAMG,YAChBjB,QAASc,EAAMI,aACfjB,KAAMa,EAAMK,aAAab,UAAU,EAAG,GACtCJ,SAAS,QAKpBQ,GAAWA,EAAQL,OAAS,GAC1B,kBAAC,EAAD,CAAS5B,MAAM,mBACXiC,EAAQG,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,CACGC,IAAKD,EAAMhB,GACXA,GAAIgB,EAAMhB,GACVrB,MAAOqC,EAAME,eACbjB,SAAUe,EAAMG,YAChBjB,QAASc,EAAMI,aACfjB,KAAMa,EAAMK,aAAab,UAAU,EAAG,GACtCJ,SAAS,QAKpBU,GAAS,kBAAC,EAAD,CAAS3B,MAAM,UAAUE,KAAMyB,O,SClEhDQ,G,QAAMC,EAAMC,OAAO,CACtBC,QAAS,gCACTC,OAAQ,CACLC,QAAS,mCACTC,SAAU,WAIHC,GACE,kBAAMP,GAAIQ,IAAI,sBADhBD,GAEA,kBAAMP,GAAIQ,IAAI,mBAFdD,GAGD,kBAAMP,GAAIQ,IAAI,kBAHbD,GAIG,SAAA7B,GAAE,OAAIsB,GAAIQ,IAAJ,gBAAiB9B,GACpC,CACG0B,OAAO,CACJK,mBAAoB,aAPhBF,GAUF,SAACG,GAAD,OAAUV,GAAIQ,IAAI,eAAe,CACtCJ,OAAO,CACJO,MAAOC,mBAAmBF,OAKtBG,GACA,kBAAMb,GAAIQ,IAAI,iBADdK,GAED,kBAAMb,GAAIQ,IAAI,eAFbK,GAGG,kBAAMb,GAAIQ,IAAI,oBAHjBK,GAIE,SAAAnC,GAAE,OAAIsB,GAAIQ,IAAJ,aAAc9B,GAChC,CACG0B,OAAO,CACJK,mBAAoB,aAPhBI,GAUF,SAACH,GAAD,OAAUV,GAAIQ,IAAI,YAAY,CACnCJ,OAAO,CACJO,MAAOC,mBAAmBF,OCrCpBI,G,2MCGZC,MAAQ,CACL3B,WAAY,KACZC,SAAU,KACVC,QAAS,KACTE,MAAO,KACPD,SAAS,G,wMAOIgB,M,uBADUnB,E,EAAjB4B,KAAQC,Q,mBAIDV,M,uBADUlB,E,EAAjB2B,KAAQC,Q,oBAIDV,M,iBADUjB,E,EAAjB0B,KAAQC,QAEXC,KAAKC,SAAS,CACX/B,aACAC,WACAC,Y,kDAGH4B,KAAKC,SAAS,CACX3B,MAAO,mC,yBAGV0B,KAAKC,SAAS,CACX5B,SAAS,I,6GAKR,IAAD,EACoD2B,KAAKH,MAAvD3B,EADF,EACEA,WAAYC,EADd,EACcA,SAAUC,EADxB,EACwBA,QAASC,EADjC,EACiCA,QAASC,EAD1C,EAC0CA,MAChD,OACG,kBAAC,GAAD,CACGJ,WAAYA,EACZC,SAAUA,EACVC,QAASA,EACTC,QAASA,EACTC,MAAOA,Q,GA5CU4B,IAAMC,W,4FCKnC,IAAMvE,GAAYC,UAAOC,IAAV,MAmEAsE,GA/DK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUjC,EAAb,EAAaA,QAASkC,EAAtB,EAAsBA,YAAajC,EAAnC,EAAmCA,QAASC,EAA5C,EAA4CA,MAA5C,OACjB,oCACA,kBAAC,IAAD,KAAQ,sDACJD,EACE,kBAAC,EAAD,MAEA,kBAAC,GAAD,KACIgC,GAAYA,EAAStC,OAAS,GAC5B,kBAAC,EAAD,CAAS5B,MAAM,mBACXkE,EAAS9B,KAAI,SAAAgC,GAAI,OACf,kBAAC,EAAD,CACG9B,IAAK8B,EAAK/C,GACVA,GAAI+C,EAAK/C,GACTrB,MAAOoE,EAAKC,cACZ/C,SAAU8C,EAAK5B,YACfjB,QAAS6C,EAAK3B,aACdjB,KAAM4C,EAAKE,eAAezC,UAAU,EAAG,SAKlDI,GAAWA,EAAQL,OAAS,GAC1B,kBAAC,EAAD,CAAS5B,MAAM,iBACXiC,EAAQG,KAAI,SAAAgC,GAAI,OACd,kBAAC,EAAD,CACG9B,IAAK8B,EAAK/C,GACVA,GAAI+C,EAAK/C,GACTrB,MAAOoE,EAAKC,cACZ/C,SAAU8C,EAAK5B,YACfjB,QAAS6C,EAAK3B,aACdjB,KAAM4C,EAAKE,eAAezC,UAAU,EAAG,SAKlDsC,GAAeA,EAAYvC,OAAS,GAClC,kBAAC,EAAD,CAAS5B,MAAM,gBACXmE,EAAY/B,KAAI,SAAAgC,GAAI,OAClB,kBAAC,EAAD,CACG9B,IAAK8B,EAAK/C,GACVA,GAAI+C,EAAK/C,GACTrB,MAAOoE,EAAKC,cACZ/C,SAAU8C,EAAK5B,YACfjB,QAAS6C,EAAK3B,aACdjB,KAAM4C,EAAKE,eAAezC,UAAU,EAAG,SAKlDM,GAAS,kBAAC,EAAD,CAAS3B,MAAM,UAAUE,KAAMyB,OC5DtCoC,G,2MCGbb,MAAQ,CACNQ,SAAU,KACVjC,QAAS,KACTkC,YAAa,KACbhC,MAAO,KACPD,SAAS,G,wMAOGsB,M,uBADSU,E,EAAjBP,KAAQC,Q,mBAIAJ,M,uBADSvB,E,EAAjB0B,KAAQC,Q,oBAIAJ,M,iBADSW,E,EAAjBR,KAAQC,QAEVC,KAAKC,SAAS,CAAEI,WAAUjC,UAASkC,gB,kDAEnCN,KAAKC,SAAS,CACZ3B,MAAO,+B,yBAGT0B,KAAKC,SAAS,CAAE5B,SAAS,I,6GAInB,IAAD,EACoD2B,KAAKH,MAAxDQ,EADD,EACCA,SAAUjC,EADX,EACWA,QAASkC,EADpB,EACoBA,YAAajC,EADjC,EACiCA,QAASC,EAD1C,EAC0CA,MACjD,OACE,kBAAC,GAAD,CACE+B,SAAUA,EACVjC,QAASA,EACTkC,YAAaA,EACbjC,QAASA,EACTC,MAAOA,Q,GAtCc4B,IAAMC,W,i2BCAnC,IAAMQ,GAAS9E,UAAO+E,OAAV,MAeNC,GAAOhF,UAAOiF,GAAV,MAIJC,GAAOlF,UAAOmF,GAAV,MAKJ,SAAAtE,GAAK,OAAKA,EAAMuE,QAAU,UAAY,iBAOtCC,GAAQrF,kBAAOsF,IAAPtF,CAAH,MAOIuF,gBAAW,gBAAeC,EAAf,EAAGC,SAAYD,SAAf,OACxB,kBAACV,GAAD,KACE,kBAACE,GAAD,KACE,kBAACE,GAAD,CAAME,QAAsB,MAAbI,GACb,kBAACH,GAAD,CAAOrD,GAAG,KAAV,WAEF,kBAACkD,GAAD,CAAME,QAAsB,QAAbI,GACb,kBAACH,GAAD,CAAOrD,GAAG,OAAV,OAEF,kBAACkD,GAAD,CAAME,QAAsB,YAAbI,GACb,kBAACH,GAAD,CAAOrD,GAAG,WAAV,gB,wUC3CR,IAAMjC,GAAYC,UAAOC,IAAV,MAITyF,GAAO1F,UAAO2F,KAAV,MAKJC,GAAQ5F,UAAO6F,MAAV,MAiFIC,GA3ES,SAAC,GAAD,IACtBC,EADsB,EACtBA,aACAC,EAFsB,EAEtBA,UACAxD,EAHsB,EAGtBA,QACAC,EAJsB,EAItBA,MACAwD,EALsB,EAKtBA,WACAC,EANsB,EAMtBA,aACAC,EAPsB,EAOtBA,WAPsB,OAStB,kBAAC,GAAD,KACE,kBAAC,IAAD,KAAQ,oDACR,kBAACT,GAAD,CAAMU,SAAUF,GACd,kBAACN,GAAD,CACES,YAAY,+BACZC,MAAOL,EACPM,SAAUJ,KAGb3D,EACC,kBAAC,EAAD,MAEA,oCACGuD,GAAgBA,EAAa7D,OAAS,GACrC,kBAAC,EAAD,CAAS5B,MAAM,iBACZyF,EAAarD,KAAI,SAAAC,GAAK,OACrB,kBAAC,EAAD,CACEC,IAAKD,EAAMhB,GACXA,GAAIgB,EAAMhB,GACVrB,MAAOqC,EAAME,eACbjB,SAAUe,EAAMG,YAChBjB,QAASc,EAAMI,aACfjB,KAAMa,EAAMK,aAAab,UAAU,EAAG,GACtCJ,SAAS,QAKhBiE,GAAaA,EAAU9D,OAAS,GAC/B,kBAAC,EAAD,CAAS5B,MAAM,mBACZ0F,EAAUtD,KAAI,SAAAgC,GAAI,OACjB,kBAAC,EAAD,CACE9B,IAAK8B,EAAK/C,GACVA,GAAI+C,EAAK/C,GACTrB,MAAOoE,EAAKC,cACZ/C,SAAU8C,EAAK5B,YACfjB,QAAS6C,EAAK3B,aACdjB,KACE4C,EAAKE,gBAAkBF,EAAKE,eAAezC,UAAU,EAAG,UAQrEM,GAAS,kBAAC,EAAD,CAAS3B,MAAM,UAAUE,KAAMyB,IACxCuD,GACCD,GACqB,IAArBC,EAAU9D,QACc,IAAxB6D,EAAa7D,QACX,kBAAC,EAAD,CAASlB,KAAI,iBAAoBF,MAAM,cClFhC0F,G,2MCGbxC,MAAQ,CACN+B,aAAc,KACdC,UAAW,KACXC,WAAY,GACZxD,MAAO,KACPD,SAAS,G,EAGX0D,aAAe,SAAAO,GACbA,EAAMC,iBAEa,KADI,EAAK1C,MAApBiC,YAEN,EAAKU,gB,EAITR,WAAa,SAAAM,GAAU,IAETH,EACRG,EADFG,OAAUN,MAEZO,QAAQC,IAAIR,GACZ,EAAKlC,SAAS,CAAE6B,WAAYK,K,EAG9BK,aAAe,kCAAAI,EAAAC,OAAA,uDACLf,EAAe,EAAKjC,MAApBiC,WACR,EAAK7B,SAAS,CAAE5B,SAAS,IAFZ,oBAAAuE,EAAA,MAMDvD,GAAiByC,IANhB,uBAKQF,EALR,EAKT9B,KAAQC,QALC,WAAA6C,EAAA,MASDjD,GAAamC,IATZ,gBAQQD,EARR,EAQT/B,KAAQC,QAEV,EAAKE,SAAS,CACZ2B,eACAC,cAZS,kDAeX,EAAK5B,SAAS,CAAE3B,MAAO,sBAfZ,yBAiBX,EAAK2B,SAAS,CAAE5B,SAAS,IAjBd,6E,wEAqBL,IAAD,EACyD2B,KAAKH,MAA7D+B,EADD,EACCA,aAAcC,EADf,EACeA,UAAWC,EAD1B,EAC0BA,WAAYzD,EADtC,EACsCA,QAASC,EAD/C,EAC+CA,MACtD,OACE,kBAAC,GAAD,CACEsD,aAAcA,EACdC,UAAWA,EACXxD,QAASA,EACTC,MAAOA,EACPwD,WAAYA,EACZC,aAAc/B,KAAK+B,aACnBC,WAAYhC,KAAKgC,iB,GAxDI9B,IAAMC,W,08CCEnC,IAAMvE,GAAYC,UAAOC,IAAV,MAOTgH,GAAWjH,UAAOC,IAAV,MAMa,SAAAY,GAAK,OAAIA,EAAMqG,WAOpCC,GAAUnH,UAAOC,IAAV,MAOPmH,GAAQpH,UAAOC,IAAV,MAEgB,SAAAY,GAAK,OAAIA,EAAMqG,WAOpCG,GAAOrH,UAAOC,IAAV,MAKJC,GAAQF,UAAOsH,GAAV,MAKLC,GAAgBvH,UAAOC,IAAV,MAIbiF,GAAOlF,UAAOG,KAAV,MAEJqH,GAAUxH,UAAOG,KAAV,MAIPsH,GAAWzH,UAAO0H,EAAV,MA4ECC,GArES,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,EAAWnF,MAAX,SAAkBD,QAEpC,oCACG,kBAAC,IAAD,KACG,qDAEH,kBAAC,EAAD,OAGH,kBAAC,GAAD,KACG,kBAAC,IAAD,KACG,+BAAQoF,EAAO/E,eACJ+E,EAAO/E,eACP+E,EAAOjD,cAFlB,eAIH,kBAACsC,GAAD,CACGC,QAAO,6CAAwCU,EAAOC,iBAEzD,kBAACV,GAAD,KACG,kBAACC,GAAD,CACGF,QACGU,EAAO9E,YAAP,6CAC2C8E,EAAO9E,aAC7Cb,EAAQ,MAGnB,kBAACoF,GAAD,KACG,kBAAC,GAAD,KACIO,EAAO/E,eACH+E,EAAO/E,eACP+E,EAAOjD,eAEf,kBAAC4C,GAAD,KACG,kBAAC,GAAD,KACIK,EAAO5E,aACH4E,EAAO5E,aAAab,UAAU,EAAG,GACjCyF,EAAOhD,eAAezC,UAAU,EAAG,IAE3C,kBAACqF,GAAD,eACA,kBAAC,GAAD,KACII,EAAOE,QACHF,EAAOE,SAAWF,EAAOE,QACzBF,EAAOE,SACPF,EAAOG,iBAAiB,IACxBH,EAAOG,iBAAiB,GAAI,IALpC,OAQA,kBAACP,GAAD,eACA,kBAAC,GAAD,KACII,EAAOI,QACLJ,EAAOI,OAAOtF,KAAI,SAACuF,EAAOC,GAAR,OACfA,IAAUN,EAAOI,OAAO9F,OAAS,EAC5B+F,EAAME,KADX,UAEQF,EAAME,KAFd,YAMZ,kBAACV,GAAD,KAAWG,EAAOQ,cC5HlBC,G,YCGZ,WAAYxH,GAAQ,IAAD,sBAChB,4CAAMA,IADU,IAGD2E,EACX3E,EADD4E,SAAYD,SAHC,OAKhB,EAAKxB,MAAQ,CACV4D,OAAQ,KACRnF,MAAO,KACPD,SAAS,EACTT,QAASyD,EAAS8C,SAAS,WATd,E,4KAmBZnE,KAAKtD,MAHOc,E,EADb4G,MACGlF,OAAU1B,GAEF6G,E,EAAXC,QAAWD,KAENzG,EAAYoC,KAAKH,MAAjBjC,QACF2G,EAAWC,SAAShH,IACtBiH,MAAMF,G,yCACAF,EAAK,M,UAEXZ,EAAS,K,UAEN7F,E,4CACyByB,GAAsBkF,I,iBAAvCd,E,EAAN3D,K,mDAEuBH,GAAiB4E,I,iBAAlCd,E,EAAN3D,K,0DAGNE,KAAKC,SAAS,CAAE3B,MAAO,yB,yBAEvB0B,KAAKC,SAAS,CAAE5B,SAAS,EAAOoF,W,6GAI5B,IAAD,EAC6BzD,KAAKH,MAAhC4D,EADF,EACEA,OAAQnF,EADV,EACUA,MAAOD,EADjB,EACiBA,QACvB,OACG,kBAAC,GAAD,CAAiBoF,OAAQA,EAAQnF,MAAOA,EAAOD,QAASA,Q,GA3CpC6B,IAAMC,WCKpB,qBACZ,kBAAC,IAAD,KACA,oCACG,kBAAC,GAAD,MACA,kBAAC,IAAD,KAEG,kBAAC,IAAD,CAAOuE,KAAK,IAAIC,OAAK,EAACC,UAAWC,KACjC,kBAAC,IAAD,CAAOH,KAAK,MAAMC,OAAK,EAACC,UAAWE,KACnC,kBAAC,IAAD,CAAOJ,KAAK,UAAWE,UAAWG,KAClC,kBAAC,IAAD,CAAOL,KAAK,aAAaE,UAAWI,KACpC,kBAAC,IAAD,CAAON,KAAK,YAAYE,UAAWI,KACnC,kBAAC,IAAD,CAAUC,KAAK,IAAIpH,GAAG,U,geCjB/B,IAkBeqH,GAlBMC,4BAAH,KACbC,MCYUC,G,iLATX,OACE,oCACE,kBAACC,GAAD,MACA,kBAACC,GAAD,W,GALUpF,aCDlBqF,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c38dc93a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n   :not(:last-child){\r\n      margin-bottom: 50px;\r\n   }\r\n`;\r\n\r\nconst Title = styled.span`\r\n   font-size:14px;\r\n   font-weight:600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n   margin-top: 25px;\r\n   display:grid;\r\n   grid-template-columns:repeat(auto-fill, 125px);\r\n   grid-gap:25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n   <Container>\r\n      <Title>{title}</Title>\r\n      <Grid>{children}</Grid>\r\n   </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n   title: PropTypes.string.isRequired,\r\n   children: PropTypes.oneOfType([\r\n      PropTypes.arrayOf(PropTypes.node),\r\n      PropTypes.node\r\n   ])\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  font-size: 280px;\r\n  display: inline-block;\r\n  margin-top: -180px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <Loader>\r\n      <span role=\"img\" aria-label=\"Loading\" aria-labelledby=\"Loading\">\r\n        ⏰\r\n      </span>\r\n    </Loader>\r\n  </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${props => props.color};\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.porpTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color:PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props => props.bgRul});\r\n  height: 180px;\r\n  background-size: cover;\r\n  background-position: center;\r\n  transition: opacity 0.2s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  position: absolute;\r\n  bottom: 5px;\r\n  right: 5px;\r\n  opacity: 0;\r\n  transition: opacity 0.2s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, ratring, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgRul={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐\r\n          </span>{\" \"}\r\n          {ratring}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  ratring: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PorpTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n   padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upcoming, popular, loading, error }) => (\r\n   <>\r\n      <Helmet>\r\n         <title>Movies | Nomflix</title>\r\n      </Helmet>\r\n      {\r\n        loading ? (\r\n          <Loader />\r\n       ) : (\r\n          <Container>\r\n             {nowPlaying && nowPlaying.length > 0 && (\r\n                <Section title=\"Now Playing\">\r\n                   {nowPlaying.map(movie => (\r\n                      <Poster\r\n                         key={movie.id}\r\n                         id={movie.id}\r\n                         title={movie.original_title}\r\n                         imageUrl={movie.poster_path}\r\n                         ratring={movie.vote_average}\r\n                         year={movie.release_date.substring(0, 4)}\r\n                         isMovie={true}\r\n                      />\r\n                   ))}\r\n                </Section>\r\n             )}\r\n             {upcoming && upcoming.length > 0 && (\r\n                <Section title=\"Upcoming Playing\">\r\n                   {upcoming.map(movie => (\r\n                      <Poster\r\n                         key={movie.id}\r\n                         id={movie.id}\r\n                         title={movie.original_title}\r\n                         imageUrl={movie.poster_path}\r\n                         ratring={movie.vote_average}\r\n                         year={movie.release_date.substring(0, 4)}\r\n                         isMovie={true}\r\n                      />\r\n                   ))}\r\n                </Section>\r\n             )}\r\n             {popular && popular.length > 0 && (\r\n                <Section title=\"Popular Playing\">\r\n                   {popular.map(movie => (\r\n                      <Poster\r\n                         key={movie.id}\r\n                         id={movie.id}\r\n                         title={movie.original_title}\r\n                         imageUrl={movie.poster_path}\r\n                         ratring={movie.vote_average}\r\n                         year={movie.release_date.substring(0, 4)}\r\n                         isMovie={true}\r\n                      />\r\n                   ))}\r\n                </Section>\r\n             )}\r\n             {error && <Message color=\"#e74c3c\" text={error} />}\r\n          </Container>\r\n       )}\r\n   </>\r\n);\r\n\r\n\r\n\r\nHomePresenter.propTypes = {\r\n   nowPlaying: PorpTypes.array,\r\n   upcoming: PorpTypes.array,\r\n   popular: PorpTypes.array,\r\n   loading: PorpTypes.bool.isRequired,\r\n   error: PorpTypes.string\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n   baseURL: \"https://api.themoviedb.org/3/\",\r\n   params: {\r\n      api_key: \"39776c4db4f591864b15de5b257e8787\",\r\n      language: \"en-US\"\r\n   }\r\n});\r\n\r\nexport const moviesApi = {\r\n   nowPlaying: () => api.get(\"movie/now_playing\"),\r\n   upcoming: () => api.get(\"movie/upcoming\"),\r\n   popular: () => api.get(\"movie/popular\"),\r\n   movieDetail: id => api.get(`movie/${id}`,\r\n   {\r\n      params:{\r\n         append_to_response: \"videos\"\r\n      }\r\n   }),\r\n   search: (term) => api.get(\"search/movie\",{\r\n      params:{\r\n         query: encodeURIComponent(term)\r\n      }\r\n   }),\r\n}\r\n\r\nexport const tvApi = {\r\n   topRated: () => api.get('tv/top_rated'),\r\n   popular: () => api.get('tv/popular'),\r\n   airingToday: () => api.get('tv/airing_today'),\r\n   showDetail: id => api.get(`tv/${id}`,\r\n   {\r\n      params:{\r\n         append_to_response: \"videos\"\r\n      }\r\n   }),\r\n   search: (term) => api.get(\"search/tv\",{\r\n      params:{\r\n         query: encodeURIComponent(term)\r\n      }\r\n   }),\r\n}","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n   state = {\r\n      nowPlaying: null,\r\n      upcoming: null,\r\n      popular: null,\r\n      error: null,\r\n      loading: true\r\n   };\r\n\r\n   async componentDidMount() {\r\n      try {\r\n         const {\r\n            data: { results: nowPlaying }\r\n         } = await moviesApi.nowPlaying();\r\n         const {\r\n            data: { results: upcoming }\r\n         } = await moviesApi.upcoming();\r\n         const {\r\n            data: { results: popular }\r\n         } = await moviesApi.popular();\r\n         this.setState({\r\n            nowPlaying,\r\n            upcoming,\r\n            popular\r\n         });\r\n      } catch {\r\n         this.setState({\r\n            error: \"Can't find movie information!.\"\r\n         });\r\n      } finally {\r\n         this.setState({\r\n            loading: false\r\n         });\r\n      }\r\n   }\r\n\r\n   render() {\r\n      const { nowPlaying, upcoming, popular, loading, error } = this.state;\r\n      return (\r\n         <HomePresenter\r\n            nowPlaying={nowPlaying}\r\n            upcoming={upcoming}\r\n            popular={popular}\r\n            loading={loading}\r\n            error={error}\r\n         />\r\n      );\r\n   }\r\n}\r\n","import React from \"react\";\r\nimport PorpTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n   padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n   <>\r\n   <Helmet><title>TV Shows | Nomflix</title></Helmet>\r\n      {loading ? (\r\n         <Loader />\r\n      ) : (\r\n         <Container>\r\n            {topRated && topRated.length > 0 && (\r\n               <Section title=\"Top Rated Shows\">\r\n                  {topRated.map(show => (\r\n                     <Poster\r\n                        key={show.id}\r\n                        id={show.id}\r\n                        title={show.original_name}\r\n                        imageUrl={show.poster_path}\r\n                        ratring={show.vote_average}\r\n                        year={show.first_air_date.substring(0, 4)}\r\n                     />\r\n                  ))}\r\n               </Section>\r\n            )}\r\n            {popular && popular.length > 0 && (\r\n               <Section title=\"Popular Shows\">\r\n                  {popular.map(show => (\r\n                     <Poster\r\n                        key={show.id}\r\n                        id={show.id}\r\n                        title={show.original_name}\r\n                        imageUrl={show.poster_path}\r\n                        ratring={show.vote_average}\r\n                        year={show.first_air_date.substring(0, 4)}\r\n                     />\r\n                  ))}\r\n               </Section>\r\n            )}\r\n            {airingToday && airingToday.length > 0 && (\r\n               <Section title=\"Airing Shows\">\r\n                  {airingToday.map(show => (\r\n                     <Poster\r\n                        key={show.id}\r\n                        id={show.id}\r\n                        title={show.original_name}\r\n                        imageUrl={show.poster_path}\r\n                        ratring={show.vote_average}\r\n                        year={show.first_air_date.substring(0, 4)}\r\n                     />\r\n                  ))}\r\n               </Section>\r\n            )}\r\n            {error && <Message color=\"#e74c3c\" text={error} />}\r\n         </Container>\r\n      )}\r\n   </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n   topRated: PorpTypes.array,\r\n   popular: PorpTypes.array,\r\n   airingToday: PorpTypes.array,\r\n   loading: PorpTypes.bool.isRequired,\r\n   error: PorpTypes.string\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    error: null,\r\n    loading: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated }\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular }\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday }\r\n      } = await tvApi.airingToday();\r\n      this.setState({ topRated, popular, airingToday });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find TV information.\"\r\n      });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, loading, error } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0px 10px;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 50px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid\r\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom .5s ease-in-out;\r\n  /* &:not(:last-child) {\r\n    margin-right: 10px;\r\n  } */\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 50px;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React from \"react\";\r\nimport PorpTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Section from \"../../Components/Section\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  loading,\r\n  error,\r\n  searchTerm,\r\n  handleSubmit,\r\n  updateTerm\r\n}) => (\r\n  <Container>\r\n    <Helmet><title>Search | Nomflix</title></Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                ratring={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Show Results\">\r\n            {tvResults.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                ratring={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n      </>\r\n    )}\r\n    {error && <Message color=\"#e74c3c\" text={error} />}\r\n    {tvResults &&\r\n      movieResults &&\r\n      tvResults.length === 0 &&\r\n      movieResults.length === 0 && (\r\n        <Message text={`Nothing Found!`} color=\"#95a5a6\" />\r\n      )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PorpTypes.array,\r\n  tvResults: PorpTypes.array,\r\n  loading: PorpTypes.bool.isRequired,\r\n  error: PorpTypes.string,\r\n  searchTerm: PorpTypes.string,\r\n  handleSubmit: PorpTypes.func.isRequired,\r\n  updateTerm: PorpTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchConatiner from \"./SearchConatiner\";\r\n\r\nexport default SearchConatiner;","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    error: null,\r\n    loading: false\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = event => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    console.log(value);\r\n    this.setState({ searchTerm: value });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults }\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults }\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Can't find result\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        loading={loading}\r\n        error={error}\r\n        searchTerm={searchTerm}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PorpTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"../../Components/Loader\";\r\n\r\nconst Container = styled.div`\r\n   height: calc(100vh - 50px);\r\n   width: 100%;\r\n   position: relative;\r\n   padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n   position: absolute;\r\n   top: 0;\r\n   left: 0;\r\n   width: 100%;\r\n   height: 100%;\r\n   background-image: url(${props => props.bgImage});\r\n   background-position: center center;\r\n   background-size: cover;\r\n   filter: blur(3px);\r\n   opacity: 0.5;\r\n`;\r\n\r\nconst Content = styled.div`\r\n   display: flex;\r\n   height: 100%;\r\n   position: relative;\r\n   z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n   width: 30%;\r\n   background-image: url(${props => props.bgImage});\r\n   background-position: center center;\r\n   background-size: cover;\r\n   height: 100%;\r\n   border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n   width: 70%;\r\n   margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n   font-size: 32px;\r\n   margin-bottom: 10px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n   margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n   margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n   font-size: 12px;\r\n   opacity: 0.6;\r\n   line-height: 1.5;\r\n   width: 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, error, loading }) =>\r\n   loading ? (\r\n      <>\r\n         <Helmet>\r\n            <title>Loading | Nomflix</title>\r\n         </Helmet>\r\n         <Loader />\r\n      </>\r\n   ) : (\r\n      <Container>\r\n         <Helmet>\r\n            <title>{result.original_title\r\n                     ? result.original_title\r\n                     : result.original_name} | Nomflix</title>\r\n         </Helmet>\r\n         <Backdrop\r\n            bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n         ></Backdrop>\r\n         <Content>\r\n            <Cover\r\n               bgImage={\r\n                  result.poster_path\r\n                     ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n                     : require(\"../../assets/noPosterSmall.png\")\r\n               }\r\n            />\r\n            <Data>\r\n               <Title>\r\n                  {result.original_title\r\n                     ? result.original_title\r\n                     : result.original_name}\r\n               </Title>\r\n               <ItemContainer>\r\n                  <Item>\r\n                     {result.release_date\r\n                        ? result.release_date.substring(0, 4)\r\n                        : result.first_air_date.substring(0, 4)}\r\n                  </Item>\r\n                  <Divider>▪</Divider>\r\n                  <Item>\r\n                     {result.runtime\r\n                        ? result.runtime && result.runtime\r\n                        : result.runtime &&\r\n                          result.episode_run_time[0] &&\r\n                          result.episode_run_time[0]}{\" \"}\r\n                     min\r\n                  </Item>\r\n                  <Divider>▪</Divider>\r\n                  <Item>\r\n                     {result.genres &&\r\n                        result.genres.map((genre, index) =>\r\n                           index === result.genres.length - 1\r\n                              ? genre.name\r\n                              : `${genre.name} / `\r\n                        )}\r\n                  </Item>\r\n               </ItemContainer>\r\n               <Overview>{result.overview}</Overview>\r\n            </Data>\r\n         </Content>\r\n      </Container>\r\n   );\r\n\r\nDetailPresenter.propTypes = {\r\n   result: PorpTypes.array,\r\n   error: PorpTypes.array,\r\n   loading: PorpTypes.bool.isRequired\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      const {\r\n         location: { pathname }\r\n      } = props;\r\n      this.state = {\r\n         result: null,\r\n         error: null,\r\n         loading: true,\r\n         isMovie: pathname.includes(\"/movie\")\r\n      };\r\n   }\r\n\r\n   async componentDidMount() {\r\n      const {\r\n         match: {\r\n            params: { id }\r\n         },\r\n         history: { push }\r\n      } = this.props;\r\n      const { isMovie } = this.state;\r\n      const parsedId = parseInt(id);\r\n      if (isNaN(parsedId)) {\r\n         return push(\"/\");\r\n      }\r\n      let result = null;\r\n      try {\r\n         if (isMovie) {\r\n            ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n         } else {\r\n            ({ data: result } = await tvApi.showDetail(parsedId));\r\n         }\r\n      } catch {\r\n         this.setState({ error: \"Can't find anything.\" });\r\n      } finally {\r\n         this.setState({ loading: false, result });\r\n      }\r\n   }\r\n\r\n   render() {\r\n      const { result, error, loading } = this.state;\r\n      return (\r\n         <DetailPresenter result={result} error={error} loading={loading} />\r\n      );\r\n   }\r\n}\r\n","import React from \"react\";\r\n// import {HashRouter as Router, Route} from \"react-router-dom\";\r\nimport {BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Header from \"Components/Header\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\nexport default () => (\r\n   <Router>\r\n   <>\r\n      <Header />\r\n      <Switch>\r\n         {/* <Route path=\"/\" exact component={Home} /> */}\r\n         <Route path=\"/\" exact component={Home} />\r\n         <Route path=\"/tv\" exact component={TV} />\r\n         <Route path=\"/search\"  component={Search} />\r\n         <Route path=\"/movie/:id\" component={Detail} />\r\n         <Route path=\"/show/:id\" component={Detail} />\r\n         <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n   </>\r\n   </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n   ${reset};\r\n   a{\r\n      text-decoration:none;\r\n      color:inherit;\r\n   }\r\n   *{\r\n      box-sizing: border-box;\r\n   }\r\n   body{\r\n      font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n      font-size:12px;\r\n      background-color:rgba(20,20,20,1);\r\n      color:white;\r\n      padding-top:50px;\r\n   }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles/>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}